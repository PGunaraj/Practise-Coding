class Node:
	def __init__(self,v):
		self.val=v
		self.next=None

class LL:
	def __init__(self):
		self.head=None
	def insert(self,v):
		node=Node(v)
		current=self.head
		if current==None:
			self.head=node
		else:
			while current.next!=None:
				current=current.next
			current.next=node
	def size(self):
		current=self.head
		c=0
		while current!=None:
			c+=1
			current=current.next
		return c

def SumOfLastNNodes(l,n):
	N=l.size()
	pos=(N-n)+1
	c=1
	current=l.head
	s=0
	while c!=pos:
		c+=1
		current=current.next
	while current!=None:
		s+=current.val
		current=current.next
	print(s)

l=LL()
l.insert(5)
l.insert(9)
l.insert(6)
l.insert(3)
l.insert(4)
l.insert(10)
SumOfLastNNodes(l,3)
x=LL()
x.insert(1)
x.insert(2)
SumOfLastNNodes(x,2)

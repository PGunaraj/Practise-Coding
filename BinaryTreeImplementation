def BinaryTree(r):
	return [r,[],[]]
	
def insertLeft(r,val):
	t=r.pop(1)
	if len(t)>1:
		r.insert(1,[val,t,[]])
	else:
		r.insert(1,[val,[],[]])
	return r

def insertRight(r,val):
	t=r.pop(2)
	if len(t)>1:
		r.insert(2,[val,[],t])
	else:
		r.insert(2,[val,[],[]])
	return r

def getRoot(r):
	return r[0]
	
def setRoot(r,newval):
	r[0]=newval
	
def getLeft(r):
	return r[1]
	
def getRight(r):
	return r[2]
	
	
ro = BinaryTree('a')
insertLeft(ro,'b')
insertRight(ro,'c')
l=getLeft(ro)
r=getRight(ro)
insertRight(l,'d')
insertLeft(r,'e')
insertRight(r,'f')

print(ro)

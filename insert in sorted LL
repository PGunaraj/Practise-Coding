class Node:
	def __init__(self,v):
		self.val=v
		self.next=None

class LL:
	def __init__(self):
		self.head=None
	def insert(self,v):
		node=Node(v)
		current=self.head
		if current==None:
			self.head=node
		else:
			while current.next!=None:
				current=current.next
			current.next=node
	def printLL(self):
		current=self.head
		while current!=None:
			print(current.val,end=" ")
			current=current.next
		print()

def insertInSortedList(l,v):
	curr=l.head
	prev=curr
	node=Node(v)
	ck=False
	if not curr or v<curr.val:
		node.next=curr
		l.head=node
		ck=True
	else:
		while curr!=None:
			if node.val>=curr.val:
				prev=curr
				curr=curr.next
			else:
				prev.next=node
				node.next=curr
				ck=True
				break
	if not ck:
		prev.next=node
	l.printLL()
		

l=LL()
l.insert(2)
l.insert(4)
l.insert(6)
l.insert(8)
l.insert(10)
insertInSortedList(l,1)
x=LL()
insertInSortedList(x,1)

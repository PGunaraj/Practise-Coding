class Queue:
	def __init__(self):
		self.list=[]
	def enqueue(self,v):
		self.list.append(v)
	def dequeue(self):
		return self.list.pop(0)
	def front(self):
		return self.list[0]
	def printQueue(self):
		print(self.list)
	def isEmpty(self):
		return len(self.list)==0
	def size(self):
		return len(self.list)

class Stack:
	def __init__(self):
		self.list=[]
	def push(self,v):
		self.list.append(v)
	def pop(self):
		return self.list.pop()
	def top(self):
		return self.list[len(self.list)-1]
	def printStack(self):
		print(self.list)
	def isEmpty(self):
		return len(self.list)==0
	def size(self):
		return len(self.list)

def interleave(q):
	s=Stack()
	mid=q.size()//2
	for i in range(mid):
		s.push(q.dequeue())
	for i in range(mid):
		q.enqueue(s.pop())
	for i in range(mid):
		q.enqueue(q.dequeue())
	for i in range(mid):
		s.push(q.dequeue())
	for i in range(mid):
		q.enqueue(s.pop())
		q.enqueue(q.dequeue())
	q.printQueue()

q=Queue()
q.enqueue(1)
q.enqueue(2)
q.enqueue(3)
q.enqueue(4)
interleave(q)

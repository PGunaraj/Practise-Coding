class Node:
	def __init__(self,v):
		self.val=v
		self.next=None

class LL:
	def __init__(self):
		self.head=None
	def insert(self,v):
		node=Node(v)
		current=self.head
		if current==None:
			self.head=node
		else:
			while current.next!=None:
				current=current.next
			current.next=node
	def printLL(self):
		current=self.head
		while current!=None:
			print(current.val,end=" ")
			current=current.next
		print()

def rotate(l,k):
	curr=l.head
	c=1
	while c<k:
		c+=1
		curr=curr.next
	new=curr.next
	curr.next=None
	curr=new
	while curr.next is not None:
		curr=curr.next
	curr.next=l.head
	l.head=new
	l.printLL()

l=LL()
l.insert(10)
l.insert(20)
l.insert(30)
l.insert(40)
l.insert(50)
l.insert(60)
rotate(l,4)

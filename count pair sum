class Node:
	def __init__(self,v):
		self.val=v
		self.next=None

class LL:
	def __init__(self):
		self.head=None
	def insert(self,v):
		node=Node(v)
		current=self.head
		if current==None:
			self.head=node
		else:
			while current.next!=None:
				current=current.next
			current.next=node
	def printLL(self):
		current=self.head
		while current!=None:
			print(current.val,end=" ")
			current=current.next
		print()

def CountPairs(l1,l2,x):
	d={}
	c=0
	i=0
	while l1!=None:
		d[i]=x-l1.val
		l1=l1.next
		i+=1
	while l2!=None:
		if l2.val in d.values():
			print(x-l2.val,",",l2.val)
			c+=1
		l2=l2.next
	print("totally:",c,"pairs")

l1=LL()
l1.insert(4)
l1.insert(3)
l1.insert(5)
l1.insert(7)
l1.insert(11)
l1.insert(2)
l1.insert(1)
l2=LL()
l2.insert(2)
l2.insert(3)
l2.insert(4)
l2.insert(5)
l2.insert(6)
l2.insert(8)
l2.insert(12)
CountPairs(l1.head,l2.head,9)
